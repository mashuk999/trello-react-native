{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abhay\\\\Desktop\\\\trelloclone\\\\trello\\\\screens\\\\Login.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeScreen from \"../screens/HomeScreen\";\nvar Stack = createStackNavigator();\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _ref2 = '',\n      _ref3 = _slicedToArray(_ref2, 2),\n      loginText = _ref3[0],\n      setloginText = _ref3[1];\n\n  var handleClick = function handleClick() {\n    React.createElement(NavigationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      }\n    }, React.createElement(Stack.Navigator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        title: 'Welcome'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      }\n    })));\n  };\n\n  var loginFunc = function loginFunc() {\n    var url = 'http://127.0.0.1:8000/';\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        lat: 1\n      }),\n      credentials: 'same-origin'\n    }).then(function (response) {\n      if (response.status === 403) {\n        console.log('Authentication error...');\n      }\n\n      handleClick();\n      return response.json();\n    }).then(function (responseJson) {\n      console.log(responseJson);\n      return responseJson;\n    }).catch(function (error) {\n      var message = 'Error saving new bookmark.';\n      console.log(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 50,\n      height: 50\n    },\n    source: {\n      uri: 'https://reactnative.dev/img/tiny_logo.png'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    }\n  }), React.createElement(View, {\n    style: styles.innercontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    }\n  }, \"UserName :\"), React.createElement(TextInput, {\n    placeholder: \"Enter UserName\",\n    value: loginText,\n    underlineColorAndroid: \"transparent\",\n    style: {\n      borderBottomColor: 'black',\n      borderBottomWidth: 1,\n      fontSize: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    }\n  })), React.createElement(View, {\n    style: styles.innercontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    }\n  }, \"Password :\"), React.createElement(TextInput, {\n    placeholder: \"Enter Password\",\n    value: loginText,\n    underlineColorAndroid: \"transparent\",\n    style: {\n      borderBottomColor: 'black',\n      borderBottomWidth: 1,\n      fontSize: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    }\n  })), React.createElement(Button, {\n    title: \"Login\",\n    onPress: loginFunc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  innercontainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    margin: 10\n  },\n  text: {\n    fontSize: 20,\n    justifyContent: 'center',\n    alignContent: 'center'\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/Abhay/Desktop/trelloclone/trello/screens/Login.js"],"names":["React","useState","TextInput","NavigationContainer","createStackNavigator","HomeScreen","Stack","Login","navigation","loginText","setloginText","handleClick","title","loginFunc","url","fetch","method","headers","Accept","body","JSON","stringify","lat","credentials","then","response","status","console","log","json","responseJson","catch","error","message","styles","container","width","height","uri","innercontainer","text","borderBottomColor","borderBottomWidth","fontSize","StyleSheet","create","justifyContent","alignItems","flexDirection","margin","alignContent"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport {Text, View, Button,StyleSheet,Image} from 'react-native';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\n\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createStackNavigator} from '@react-navigation/stack';\r\nimport HomeScreen from '../screens/HomeScreen';\r\n\r\nconst Stack = createStackNavigator();\r\nconst Login = ({ navigation }) =>{\r\n\r\n    const [loginText,setloginText] = ('')\r\n\r\n    const handleClick = ()=>{\r\n        //setloginText('hello');\r\n        <NavigationContainer>\r\n        <Stack.Navigator>\r\n          <Stack.Screen\r\n            name=\"Home\"\r\n            component={HomeScreen}\r\n            options={{title: 'Welcome'}}\r\n          />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    }\r\n    const loginFunc =()=>{\r\n        //console.log('hello');\r\n\r\n        let url = 'http://127.0.0.1:8000/';\r\n\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type':     'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                lat: 1\r\n            }),\r\n            credentials: 'same-origin',\r\n        }).then((response) => {\r\n            if (response.status === 403) {\r\n                console.log('Authentication error...');\r\n                \r\n               // this.setState({currentMessage: 'Authentication error.'});\r\n            }\r\n            //console.log(response);\r\n            handleClick();\r\n            return response.json()\r\n        }).then((responseJson) => {\r\n            console.log(responseJson);\r\n\r\n            return responseJson;\r\n        }).catch((error) => {\r\n            let message = 'Error saving new bookmark.';\r\n            //this.setState({'currentMessage': message + \"\\n\" + error});\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    return(\r\n        <View style={styles.container}>\r\n        <Image\r\n          style={{width: 50, height: 50}}\r\n          source={{uri: 'https://reactnative.dev/img/tiny_logo.png'}}\r\n        />   \r\n             <View style={styles.innercontainer}>\r\n                <Text style={styles.text}>UserName :</Text>\r\n                <TextInput placeholder='Enter UserName' value={loginText} underlineColorAndroid='transparent' style={{borderBottomColor:'black',borderBottomWidth:1,fontSize:20}}/>\r\n            </View>\r\n\r\n            <View style={styles.innercontainer}>\r\n                <Text style={styles.text}>Password :</Text>\r\n                <TextInput placeholder='Enter Password' value={loginText} underlineColorAndroid='transparent' style={{borderBottomColor:'black',borderBottomWidth:1,fontSize:20}}/>\r\n            </View>\r\n\r\n            <Button title=\"Login\" onPress={loginFunc} />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n    },\r\n    innercontainer:{\r\n        flexDirection:'row',\r\n        justifyContent:'space-evenly',\r\n        margin:10\r\n    },\r\n\r\n    text:{\r\n        fontSize:20,\r\n        justifyContent:'center',\r\n        alignContent:'center'\r\n    },\r\n});\r\n\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}