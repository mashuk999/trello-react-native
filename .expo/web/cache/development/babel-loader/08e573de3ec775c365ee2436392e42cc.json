{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abhay\\\\Desktop\\\\trelloclone\\\\trello\\\\screens\\\\Login.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeScreen from \"../screens/HomeScreen\";\nimport LinksScreen from \"../screens/LinksScreen\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginText = _useState2[0],\n      setloginText = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passwordText = _useState4[0],\n      setPasswordText = _useState4[1];\n\n  var handleRegistration = function handleRegistration() {\n    navigation.navigate('Registration');\n  };\n\n  var handleLogin = function handleLogin(res) {\n    if (res == 1) {\n      navigation.navigate('BottomNavigation', {\n        username: {\n          loginText: loginText\n        }[\"loginText\"]\n      });\n    } else {\n      Alert.alert('Alert Title', 'My Alert Msg', [{\n        text: 'OK',\n        onPress: function onPress() {\n          return console.log('OK Pressed');\n        }\n      }], {\n        cancelable: false\n      });\n    }\n  };\n\n  var _storeData = function _storeData(ID) {\n    return _regeneratorRuntime.async(function _storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('loginID', ID));\n\n          case 3:\n            _context.next = 7;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var _retrieveData = function _retrieveData() {\n    var value;\n    return _regeneratorRuntime.async(function _retrieveData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('loginID'));\n\n          case 3:\n            value = _context2.sent;\n\n            if (value !== null) {\n              navigation.navigate('BottomNavigation', {\n                username: value\n              });\n            }\n\n            _context2.next = 9;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var checkogin = function checkogin() {\n    console.log(\"check\");\n\n    _storeData('h');\n\n    _retrieveData();\n  };\n\n  var loginFunc = function loginFunc() {\n    var url = 'http://127.0.0.1:8000/auth/login/';\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        loginID: {\n          loginText: loginText\n        }['loginText'],\n        password: {\n          passwordText: passwordText\n        }['passwordText']\n      }),\n      credentials: 'same-origin'\n    }).then(function (response) {\n      if (response.status === 403) {\n        console.log('Authentication error...');\n      }\n\n      return response.json();\n    }).then(function (responseJson) {\n      console.log(responseJson);\n      handleLogin(responseJson);\n      return responseJson;\n    }).catch(function (error) {\n      var message = 'Error saving new bookmark.';\n      console.log(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    onPress: checkogin(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    }\n  }, React.createElement(View, {\n    style: styles.innercontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    }\n  }, \"UserName :\"), React.createElement(TextInput, {\n    placeholder: \"Enter UserName\",\n    underlineColorAndroid: \"transparent\",\n    style: {\n      borderBottomColor: 'black',\n      borderBottomWidth: 1,\n      fontSize: 20\n    },\n    onChangeText: function onChangeText(value) {\n      setloginText(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    }\n  })), React.createElement(View, {\n    style: styles.innercontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    }\n  }, \"Password :\"), React.createElement(TextInput, {\n    placeholder: \"Enter Password\",\n    underlineColorAndroid: \"transparent\",\n    style: {\n      borderBottomColor: 'black',\n      borderBottomWidth: 1,\n      fontSize: 20\n    },\n    onChangeText: function onChangeText(value) {\n      setPasswordText(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    }\n  })), React.createElement(View, {\n    style: styles.innercontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    }\n  }, React.createElement(Button, {\n    title: \"Login\",\n    onPress: loginFunc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    }\n  }), React.createElement(Button, {\n    title: \"Registration\",\n    color: \"#fcd6cc\",\n    onPress: handleRegistration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 90\n  },\n  innercontainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: 20\n  },\n  text: {\n    fontSize: 20,\n    justifyContent: 'center',\n    alignContent: 'center'\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/Abhay/Desktop/trelloclone/trello/screens/Login.js"],"names":["React","useState","TextInput","NavigationContainer","createStackNavigator","HomeScreen","LinksScreen","Login","navigation","loginText","setloginText","passwordText","setPasswordText","handleRegistration","navigate","handleLogin","res","username","Alert","alert","text","onPress","console","log","cancelable","_storeData","ID","AsyncStorage","setItem","_retrieveData","getItem","value","checkogin","loginFunc","url","fetch","method","headers","Accept","body","JSON","stringify","loginID","password","credentials","then","response","status","json","responseJson","catch","error","message","styles","container","innercontainer","borderBottomColor","borderBottomWidth","fontSize","StyleSheet","create","justifyContent","alignItems","marginTop","flexDirection","margin","alignContent"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport {Text, View, Button,StyleSheet,Image,Alert} from 'react-native';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\n\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createStackNavigator} from '@react-navigation/stack';\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport LinksScreen from '../screens/LinksScreen';\r\nimport { AsyncStorage } from 'react-native';\r\n\r\nconst Login = ({ navigation }) =>{\r\n\r\n    const [loginText,setloginText] = useState()\r\n    const [passwordText,setPasswordText] = useState('')\r\n\r\n\r\n    const handleRegistration=()=>{\r\n        navigation.navigate('Registration');\r\n    }\r\n\r\n    const handleLogin = (res)=>{\r\n        \r\n        if(res==1){\r\n            navigation.navigate('BottomNavigation',{\r\n                username:{loginText}[\"loginText\"]\r\n            });\r\n        }\r\n        else{\r\n            Alert.alert(\r\n                'Alert Title',\r\n                'My Alert Msg',\r\n                [\r\n                  {text: 'OK', onPress: () => console.log('OK Pressed')},\r\n                ],\r\n                { cancelable: false }\r\n              )\r\n        }\r\n    }\r\n    const _storeData = async (ID) => {\r\n        try {\r\n          await AsyncStorage.setItem('loginID', ID);\r\n        } catch (error) {\r\n          // Error saving data\r\n        }\r\n      }\r\n\r\n      const _retrieveData = async () => {\r\n        try {\r\n          const value = await AsyncStorage.getItem('loginID');\r\n          if (value !== null) {\r\n            // We have data!!\r\n            // console.log(value);\r\n            navigation.navigate('BottomNavigation',{\r\n                username:value\r\n            });\r\n            \r\n          }\r\n        } catch (error) {\r\n          // Error retrieving data\r\n        }\r\n      }\r\n    const checkogin=()=>{\r\n        console.log(\"check\");\r\n        _storeData('h');\r\n        _retrieveData();    \r\n    }\r\n    \r\n    const loginFunc =()=>{\r\n        //console.log('hello');\r\n\r\n        let url = 'http://127.0.0.1:8000/auth/login/';\r\n\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type':     'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                loginID: {loginText}['loginText'],\r\n                password:{passwordText}['passwordText']\r\n            }),\r\n            credentials: 'same-origin',\r\n        }).then((response) => {\r\n            if (response.status === 403) {\r\n                console.log('Authentication error...');\r\n                \r\n               // this.setState({currentMessage: 'Authentication error.'});\r\n            }\r\n            //console.log(response);\r\n            //handleClick();\r\n            return response.json()\r\n        }).then((responseJson) => {\r\n            //let jobj = JSON.parse(responseJson);\r\n            console.log(responseJson);\r\n            handleLogin(responseJson);\r\n            return responseJson;\r\n        }).catch((error) => {\r\n            let message = 'Error saving new bookmark.';\r\n            //this.setState({'currentMessage': message + \"\\n\" + error});\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    return(\r\n\r\n        \r\n        <View style={styles.container} onPress={checkogin()}>\r\n         \r\n             <View style={styles.innercontainer}>\r\n                <Text style={styles.text}>UserName :</Text>\r\n                <TextInput placeholder='Enter UserName'\r\n                underlineColorAndroid='transparent'\r\n                style={{borderBottomColor:'black',borderBottomWidth:1,fontSize:20}}\r\n                onChangeText={(value)=>{setloginText(value)}}/>\r\n            </View>\r\n\r\n            <View style={styles.innercontainer}>\r\n                <Text style={styles.text}>Password :</Text>\r\n                <TextInput placeholder='Enter Password' \r\n                underlineColorAndroid='transparent' \r\n                style={{borderBottomColor:'black',borderBottomWidth:1,fontSize:20}}\r\n                onChangeText={(value)=>{setPasswordText(value)}}/>\r\n            </View>\r\n\r\n            <View style={styles.innercontainer}>\r\n                <Button title=\"Login\"  onPress={loginFunc} />\r\n                <Button title=\"Registration\"  color=\"#fcd6cc\" onPress={handleRegistration} />\r\n            </View>\r\n            \r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        marginTop:90,\r\n    },\r\n    innercontainer:{\r\n        flexDirection:'row',\r\n        justifyContent:'space-between',\r\n        margin:20\r\n    },\r\n\r\n    text:{\r\n        fontSize:20,\r\n        justifyContent:'center',\r\n        alignContent:'center'\r\n    },\r\n});\r\n\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}