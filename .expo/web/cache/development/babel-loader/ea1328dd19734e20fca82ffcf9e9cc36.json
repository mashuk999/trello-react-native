{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abhay\\\\Desktop\\\\trelloclone\\\\trello\\\\screens\\\\AddBoard.js\";\nimport React, { useState } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\n\nvar AddBoard = function AddBoard(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      boardName = _useState2[0],\n      setBoardName = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      curUser = _useState4[0],\n      setcurUser = _useState4[1];\n\n  var _retrieveData = function _retrieveData() {\n    var value;\n    return _regeneratorRuntime.async(function _retrieveData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('loginID'));\n\n          case 3:\n            value = _context.sent;\n\n            if (value !== null) {\n              setcurUser({\n                curUser: curUser\n              }, [value]);\n              console.log({\n                curUser: curUser\n              }['curUser']);\n              handleCreateBoard();\n            }\n\n            _context.next = 9;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var handleCreateBoard = function handleCreateBoard() {\n    var url = 'http://127.0.0.1:8000/assuth/login/';\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        boardName: {\n          boardName: boardName\n        }['boardName'],\n        author: {\n          curUser: curUser\n        }['curUser']\n      }),\n      credentials: 'same-origin'\n    }).then(function (response) {\n      if (response.status === 403) {\n        console.log('Authentication error...');\n      }\n\n      return response.json();\n    }).then(function (responseJson) {\n      console.log(responseJson);\n      handleLogin(responseJson);\n      return responseJson;\n    }).catch(function (error) {\n      var message = 'Error saving new bookmark.';\n      console.log(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    }\n  }, React.createElement(View, {\n    style: styles.innercontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 30,\n      marginBottom: 20,\n      fontFamily: 'Verdana'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    }\n  }, \"Enter Name:\"), React.createElement(TextInput, {\n    style: {\n      fontSize: 30,\n      marginBottom: '50%',\n      borderBottomWidth: 1\n    },\n    onChangeText: function onChangeText(value) {\n      setBoardName(value);\n    },\n    value: boardName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    }\n  }), React.createElement(Button, {\n    onPress: _retrieveData,\n    title: \"Create\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    }\n  })), React.createElement(Button, {\n    onPress: props.nav,\n    title: \"Dismiss\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    height: '100%'\n  },\n  innercontainer: {\n    margin: 20,\n    padding: '10%',\n    paddingTop: '10%',\n    marginBottom: '50%',\n    height: '50%',\n    justifyContent: 'center',\n    alignContent: 'center',\n    backgroundColor: '#e7e7e7'\n  }\n});\nexport default AddBoard;","map":{"version":3,"sources":["C:/Users/Abhay/Desktop/trelloclone/trello/screens/AddBoard.js"],"names":["React","useState","TextInput","NavigationContainer","createStackNavigator","AddBoard","props","boardName","setBoardName","curUser","setcurUser","_retrieveData","AsyncStorage","getItem","value","console","log","handleCreateBoard","url","fetch","method","headers","Accept","body","JSON","stringify","author","credentials","then","response","status","json","responseJson","handleLogin","catch","error","message","styles","container","innercontainer","fontSize","marginBottom","fontFamily","borderBottomWidth","nav","StyleSheet","create","height","margin","padding","paddingTop","justifyContent","alignContent","backgroundColor"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport { Modal, Text, View, StyleSheet, Button } from 'react-native';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { AsyncStorage } from 'react-native';\r\n\r\n\r\nconst AddBoard = (props) => {\r\n    const [boardName,setBoardName] = useState();\r\n    const [curUser,setcurUser]=useState([]);\r\n    \r\n    const _retrieveData = async () => {\r\n\r\n        try {\r\n          const value = await AsyncStorage.getItem('loginID');\r\n          if (value !== null) {\r\n            // We have data!!\r\n            \r\n            setcurUser({curUser},[value]);\r\n            console.log({curUser}['curUser']);\r\n            handleCreateBoard();\r\n          }\r\n        \r\n        } catch (error) {\r\n          // Error retrieving data\r\n\r\n        }\r\n        \r\n      }\r\n\r\n\r\n    const handleCreateBoard=()=>{\r\n        let url = 'http://127.0.0.1:8000/assuth/login/';\r\n\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type':     'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                boardName: {boardName}['boardName'],\r\n                author: {curUser}['curUser']\r\n            }),\r\n            credentials: 'same-origin',\r\n        }).then((response) => {\r\n            if (response.status === 403) {\r\n                console.log('Authentication error...');\r\n                \r\n               // this.setState({currentMessage: 'Authentication error.'});\r\n            }\r\n            //console.log(response);\r\n            //handleClick();\r\n            return response.json()\r\n        }).then((responseJson) => {\r\n            //let jobj = JSON.parse(responseJson);\r\n            console.log(responseJson);\r\n            handleLogin(responseJson);\r\n            return responseJson;\r\n        }).catch((error) => {\r\n            let message = 'Error saving new bookmark.';\r\n            //this.setState({'currentMessage': message + \"\\n\" + error});\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container} >\r\n            <View style={styles.innercontainer}>\r\n                <Text style={{fontSize:30,marginBottom:20,fontFamily:'Verdana'}}>Enter Name:</Text>\r\n                <TextInput style={{fontSize:30,marginBottom:'50%',borderBottomWidth:1}}\r\n                onChangeText={(value)=>{setBoardName(value)}}\r\n                value={boardName}/>\r\n                <Button onPress={_retrieveData} title=\"Create\" />\r\n\r\n\r\n            </View>\r\n\r\n            <Button onPress={props.nav} title=\"Dismiss\" />\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        height: '100%',\r\n    },\r\n    innercontainer:{\r\n        margin:20,\r\n        padding:'10%',\r\n        paddingTop:'10%',\r\n        marginBottom:'50%',\r\n        height: '50%',\r\n        justifyContent:'center',\r\n        alignContent:'center',\r\n        backgroundColor:'#e7e7e7',\r\n\r\n    }\r\n});\r\nexport default AddBoard"]},"metadata":{},"sourceType":"module"}