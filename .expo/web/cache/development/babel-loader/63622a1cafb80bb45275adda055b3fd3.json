{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abhay\\\\Desktop\\\\trelloclone\\\\trello\\\\screens\\\\Login.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeScreen from \"../screens/HomeScreen\";\nimport LinksScreen from \"../screens/LinksScreen\";\nvar Stack = createStackNavigator();\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginText = _useState2[0],\n      setloginText = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passwordText = _useState4[0],\n      setPasswordText = _useState4[1];\n\n  var handleLogin = function handleLogin(res) {\n    if (res == 1) {\n      navigation.navigate('Links', {\n        username: {\n          loginText: loginText\n        }[\"loginText\"]\n      });\n    } else {\n      Alert.alert('Alert Title', 'My Alert Msg', [{\n        text: 'OK',\n        onPress: function onPress() {\n          return console.log('OK Pressed');\n        }\n      }], {\n        cancelable: false\n      });\n    }\n  };\n\n  var loginFunc = function loginFunc() {\n    var url = 'http://127.0.0.1:8000/auth/login/';\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        loginID: {\n          loginText: loginText\n        }['loginText'],\n        password: {\n          passwordText: passwordText\n        }['passwordText']\n      }),\n      credentials: 'same-origin'\n    }).then(function (response) {\n      if (response.status === 403) {\n        console.log('Authentication error...');\n      }\n\n      return response.json();\n    }).then(function (responseJson) {\n      console.log(responseJson);\n      handleLogin(responseJson);\n      return responseJson;\n    }).catch(function (error) {\n      var message = 'Error saving new bookmark.';\n      console.log(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    }\n  }, React.createElement(View, {\n    style: styles.innercontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    }\n  }, \"UserName :\"), React.createElement(TextInput, {\n    placeholder: \"Enter UserName\",\n    underlineColorAndroid: \"transparent\",\n    style: {\n      borderBottomColor: 'black',\n      borderBottomWidth: 1,\n      fontSize: 20\n    },\n    onChangeText: function onChangeText(value) {\n      setloginText(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    }\n  })), React.createElement(View, {\n    style: styles.innercontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    }\n  }, \"Password :\"), React.createElement(TextInput, {\n    placeholder: \"Enter Password\",\n    underlineColorAndroid: \"transparent\",\n    style: {\n      borderBottomColor: 'black',\n      borderBottomWidth: 1,\n      fontSize: 20\n    },\n    onChangeText: function onChangeText(value) {\n      setPasswordText(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    }\n  })), React.createElement(Button, {\n    title: \"Login\",\n    onPress: loginFunc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    }\n  }), React.createElement(Button, {\n    title: \"Registration\",\n    color: \"#fcd6cc\",\n    onPress: loginFunc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 90\n  },\n  innercontainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    margin: 20\n  },\n  text: {\n    fontSize: 20,\n    justifyContent: 'center',\n    alignContent: 'center'\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/Abhay/Desktop/trelloclone/trello/screens/Login.js"],"names":["React","useState","TextInput","NavigationContainer","createStackNavigator","HomeScreen","LinksScreen","Stack","Login","navigation","loginText","setloginText","passwordText","setPasswordText","handleLogin","res","navigate","username","Alert","alert","text","onPress","console","log","cancelable","loginFunc","url","fetch","method","headers","Accept","body","JSON","stringify","loginID","password","credentials","then","response","status","json","responseJson","catch","error","message","styles","container","innercontainer","borderBottomColor","borderBottomWidth","fontSize","value","StyleSheet","create","justifyContent","alignItems","marginTop","flexDirection","margin","alignContent"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport {Text, View, Button,StyleSheet,Image,Alert} from 'react-native';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\n\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createStackNavigator} from '@react-navigation/stack';\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport LinksScreen from '../screens/LinksScreen';\r\n\r\n\r\nconst Stack = createStackNavigator();\r\nconst Login = ({ navigation }) =>{\r\n\r\n    const [loginText,setloginText] = useState()\r\n    const [passwordText,setPasswordText] = useState('')\r\n\r\n    const handleLogin = (res)=>{\r\n        \r\n        if(res==1){\r\n            navigation.navigate('Links',{\r\n                username:{loginText}[\"loginText\"]\r\n            });\r\n        }\r\n        else{\r\n            Alert.alert(\r\n                'Alert Title',\r\n                'My Alert Msg',\r\n                [\r\n                  {text: 'OK', onPress: () => console.log('OK Pressed')},\r\n                ],\r\n                { cancelable: false }\r\n              )\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const loginFunc =()=>{\r\n        //console.log('hello');\r\n\r\n        let url = 'http://127.0.0.1:8000/auth/login/';\r\n\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type':     'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                loginID: {loginText}['loginText'],\r\n                password:{passwordText}['passwordText']\r\n            }),\r\n            credentials: 'same-origin',\r\n        }).then((response) => {\r\n            if (response.status === 403) {\r\n                console.log('Authentication error...');\r\n                \r\n               // this.setState({currentMessage: 'Authentication error.'});\r\n            }\r\n            //console.log(response);\r\n            //handleClick();\r\n            return response.json()\r\n        }).then((responseJson) => {\r\n            //let jobj = JSON.parse(responseJson);\r\n            console.log(responseJson);\r\n            handleLogin(responseJson);\r\n            return responseJson;\r\n        }).catch((error) => {\r\n            let message = 'Error saving new bookmark.';\r\n            //this.setState({'currentMessage': message + \"\\n\" + error});\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    return(\r\n       // handleClick()\r\n        <View style={styles.container}>\r\n         \r\n             <View style={styles.innercontainer}>\r\n                <Text style={styles.text}>UserName :</Text>\r\n                <TextInput placeholder='Enter UserName'\r\n                underlineColorAndroid='transparent'\r\n                style={{borderBottomColor:'black',borderBottomWidth:1,fontSize:20}}\r\n                onChangeText={(value)=>{setloginText(value)}}/>\r\n            </View>\r\n\r\n            <View style={styles.innercontainer}>\r\n                <Text style={styles.text}>Password :</Text>\r\n                <TextInput placeholder='Enter Password' \r\n                underlineColorAndroid='transparent' \r\n                style={{borderBottomColor:'black',borderBottomWidth:1,fontSize:20}}\r\n                onChangeText={(value)=>{setPasswordText(value)}}/>\r\n            </View>\r\n\r\n            <Button title=\"Login\" onPress={loginFunc} />\r\n            <Button title=\"Registration\" color=\"#fcd6cc\" onPress={loginFunc} />\r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        marginTop:90,\r\n    },\r\n    innercontainer:{\r\n        flexDirection:'row',\r\n        justifyContent:'space-around',\r\n        margin:20\r\n    },\r\n\r\n    text:{\r\n        fontSize:20,\r\n        justifyContent:'center',\r\n        alignContent:'center'\r\n    },\r\n});\r\n\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}