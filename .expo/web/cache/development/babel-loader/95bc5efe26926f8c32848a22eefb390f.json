{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhay\\\\Desktop\\\\trelloclone\\\\trello\\\\screens\\\\ListBoard.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Boards from \"../components/Boards\";\nimport AddBoards from \"../screens/AddBoard\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nvar loadBoards = function loadBoards() {\n  var url = 'http://127.0.0.1:8000/api/getboards/';\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      boardName: {\n        boardName: boardName\n      }['boardName'],\n      authors: {\n        curUser: curUser\n      }['curUser']\n    }),\n    credentials: 'same-origin'\n  }).then(function (response) {\n    if (response.status === 403) {\n      console.log('Authentication error...');\n    }\n\n    console.log(response);\n    return response.json();\n  }).then(function (responseJson) {\n    console.log(responseJson);\n\n    if (responseJson == 1) {\n      props.nav();\n    }\n\n    return responseJson;\n  }).catch(function (error) {\n    var message = 'Error saving new bookmark.';\n    console.log(error);\n  });\n};\n\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    }\n  }, React.createElement(Button, {\n    title: \"Add Board\",\n    onPress: function onPress() {\n      return navigation.navigate('MyModal');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    }\n  }), React.createElement(Boards, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    }\n  }));\n}\n\nfunction ModalScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(View, {\n    style: {\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    }\n  }, React.createElement(AddBoards, {\n    nav: function nav() {\n      return navigation.navigate('Main');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    }\n  }));\n}\n\nvar RootStack = createStackNavigator();\n\nvar ListBoard = function ListBoard() {\n  return React.createElement(RootStack.Navigator, {\n    mode: \"card\",\n    headerMode: \"none\",\n    screenOptions: {\n      headerShown: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    }\n  }, React.createElement(RootStack.Screen, {\n    name: \"Main\",\n    component: HomeScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    }\n  }), React.createElement(RootStack.Screen, {\n    name: \"MyModal\",\n    component: ModalScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\nexport default ListBoard;","map":{"version":3,"sources":["C:/Users/Abhay/Desktop/trelloclone/trello/screens/ListBoard.js"],"names":["React","Boards","AddBoards","NavigationContainer","createStackNavigator","loadBoards","url","fetch","method","headers","Accept","body","JSON","stringify","boardName","authors","curUser","credentials","then","response","status","console","log","json","responseJson","props","nav","catch","error","message","HomeScreen","navigation","styles","container","navigate","ModalScreen","height","RootStack","ListBoard","headerShown","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Text, View, StyleSheet, ScrollView, SafeAreaView, Button, Modal } from 'react-native';\r\nimport Boards from '../components/Boards'\r\nimport AddBoards from '../screens/AddBoard'\r\n\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nconst loadBoards=()=>{\r\n    let url = 'http://127.0.0.1:8000/api/getboards/';\r\n\r\n    fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type':     'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            boardName: {boardName}['boardName'],\r\n            authors: {curUser}['curUser']\r\n        }),\r\n        credentials: 'same-origin',\r\n    }).then((response) => {\r\n        if (response.status === 403) {\r\n            console.log('Authentication error...');\r\n            \r\n           // this.setState({currentMessage: 'Authentication error.'});\r\n        }\r\n        console.log(response);\r\n        //handleClick();\r\n        return response.json()\r\n    }).then((responseJson) => {\r\n        //let jobj = JSON.parse(responseJson);\r\n        console.log(responseJson);\r\n        if(responseJson==1)\r\n        {\r\n            props.nav();\r\n        }\r\n        return responseJson;\r\n    }).catch((error) => {\r\n        let message = 'Error saving new bookmark.';\r\n        //this.setState({'currentMessage': message + \"\\n\" + error});\r\n        console.log(error);\r\n    });\r\n}\r\n\r\nfunction HomeScreen({ navigation }) {\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <Button title=\"Add Board\" onPress={()=>navigation.navigate('MyModal')} />\r\n            <Boards/>\r\n\r\n        </SafeAreaView>\r\n    );\r\n}\r\n\r\nfunction ModalScreen({ navigation }) {\r\n    return (\r\n        <View style={{height:'100%',}}>\r\n            <AddBoards nav={()=>navigation.navigate('Main')}/>\r\n        </View>\r\n    );\r\n}\r\nconst RootStack = createStackNavigator();\r\n\r\nconst ListBoard = () => {\r\n    return (\r\n\r\n        <RootStack.Navigator mode=\"card\" headerMode=\"none\" screenOptions={{headerShown: false}}>\r\n            <RootStack.Screen name=\"Main\" component={HomeScreen} />\r\n            <RootStack.Screen name=\"MyModal\" component={ModalScreen} />\r\n        </RootStack.Navigator>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n\r\n});\r\nexport default ListBoard\r\n\r\n"]},"metadata":{},"sourceType":"module"}