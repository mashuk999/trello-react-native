{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abhay\\\\Desktop\\\\trelloclone\\\\trello\\\\screens\\\\Login.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TextInput } from 'react-native-gesture-handler';\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _ref2 = '',\n      _ref3 = _slicedToArray(_ref2, 2),\n      loginText = _ref3[0],\n      setloginText = _ref3[1];\n\n  var handleClick = function handleClick() {\n    setloginText('hello');\n  };\n\n  var loginFunc = function loginFunc() {\n    var url = 'http://127.0.0.1:8000';\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        lat: 1\n      }),\n      credentials: 'same-origin'\n    }).then(function (response) {\n      if (response.status === 403) {\n        console.log('Authentication error...');\n      }\n\n      console.log(responseJson);\n      handleClick();\n    }).then(function (responseJson) {\n      console.log(responseJson);\n      handleClick();\n    }).catch(function (error) {\n      var message = 'Error saving new bookmark.';\n      console.log(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 50,\n      height: 50\n    },\n    source: {\n      uri: 'https://reactnative.dev/img/tiny_logo.png'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    }\n  }), React.createElement(View, {\n    style: styles.innercontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    }\n  }, \"UserName :\"), React.createElement(TextInput, {\n    placeholder: \"Enter UserName\",\n    value: loginText,\n    underlineColorAndroid: \"transparent\",\n    style: {\n      borderBottomColor: 'black',\n      borderBottomWidth: 1,\n      fontSize: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    }\n  })), React.createElement(View, {\n    style: styles.innercontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    }\n  }, \"Password :\"), React.createElement(TextInput, {\n    placeholder: \"Enter Password\",\n    value: loginText,\n    underlineColorAndroid: \"transparent\",\n    style: {\n      borderBottomColor: 'black',\n      borderBottomWidth: 1,\n      fontSize: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    }\n  })), React.createElement(Button, {\n    title: \"Login\",\n    onPress: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  innercontainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    margin: 10\n  },\n  text: {\n    fontSize: 20,\n    justifyContent: 'center',\n    alignContent: 'center'\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/Abhay/Desktop/trelloclone/trello/screens/Login.js"],"names":["React","useState","TextInput","Login","navigation","loginText","setloginText","handleClick","loginFunc","url","fetch","method","headers","Accept","body","JSON","stringify","lat","credentials","then","response","status","console","log","responseJson","catch","error","message","styles","container","width","height","uri","innercontainer","text","borderBottomColor","borderBottomWidth","fontSize","StyleSheet","create","justifyContent","alignItems","flexDirection","margin","alignContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;;;AAEA,SAASC,SAAT,QAA0B,8BAA1B;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAmB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAAA,cAEK,EAFL;AAAA;AAAA,MAEtBC,SAFsB;AAAA,MAEZC,YAFY;;AAI7B,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAI;AACpBD,IAAAA,YAAY,CAAC,OAAD,CAAZ;AACH,GAFD;;AAGA,MAAME,SAAS,GAAE,SAAXA,SAAW,GAAI;AACjB,QAAIC,GAAG,GAAG,uBAAV;AAEAC,IAAAA,KAAK,CAACD,GAAD,EAAM;AACPE,MAAAA,MAAM,EAAE,MADD;AAEPC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,kBADH;AAEL,wBAAoB;AAFf,OAFF;AAMPC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,GAAG,EAAE;AADY,OAAf,CANC;AASPC,MAAAA,WAAW,EAAE;AATN,KAAN,CAAL,CAUGC,IAVH,CAUQ,UAACC,QAAD,EAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AAGH;;AACDD,MAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACAjB,MAAAA,WAAW;AAEd,KAnBD,EAmBGY,IAnBH,CAmBQ,UAACK,YAAD,EAAkB;AACtBF,MAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACAjB,MAAAA,WAAW;AAGd,KAxBD,EAwBGkB,KAxBH,CAwBS,UAACC,KAAD,EAAW;AAChB,UAAIC,OAAO,GAAG,4BAAd;AAEAL,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,KA5BD;AA6BH,GAhCD;;AAkCA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KADT;AAEE,IAAA,MAAM,EAAE;AAACC,MAAAA,GAAG,EAAE;AAAN,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAKK,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,EAEG,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,gBAAvB;AAAwC,IAAA,KAAK,EAAE7B,SAA/C;AAA0D,IAAA,qBAAqB,EAAC,aAAhF;AAA8F,IAAA,KAAK,EAAE;AAAC8B,MAAAA,iBAAiB,EAAC,OAAnB;AAA2BC,MAAAA,iBAAiB,EAAC,CAA7C;AAA+CC,MAAAA,QAAQ,EAAC;AAAxD,KAArG;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CALL,EAUI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACK,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,gBAAvB;AAAwC,IAAA,KAAK,EAAE7B,SAA/C;AAA0D,IAAA,qBAAqB,EAAC,aAAhF;AAA8F,IAAA,KAAK,EAAE;AAAC8B,MAAAA,iBAAiB,EAAC,OAAnB;AAA2BC,MAAAA,iBAAiB,EAAC,CAA7C;AAA+CC,MAAAA,QAAQ,EAAC;AAAxD,KAArG;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAVJ,EAeI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,OAAO,EAAE9B,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,CADJ;AAmBH,CA5DD;;AA8DA,IAAMqB,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BV,EAAAA,SAAS,EAAC;AACNW,IAAAA,cAAc,EAAC,QADT;AAENC,IAAAA,UAAU,EAAC;AAFL,GADmB;AAK7BR,EAAAA,cAAc,EAAC;AACXS,IAAAA,aAAa,EAAC,KADH;AAEXF,IAAAA,cAAc,EAAC,cAFJ;AAGXG,IAAAA,MAAM,EAAC;AAHI,GALc;AAW7BT,EAAAA,IAAI,EAAC;AACDG,IAAAA,QAAQ,EAAC,EADR;AAEDG,IAAAA,cAAc,EAAC,QAFd;AAGDI,IAAAA,YAAY,EAAC;AAHZ;AAXwB,CAAlB,CAAf;AAmBA,eAAezC,KAAf","sourcesContent":["import React,{useState} from 'react';\r\nimport {Text, View, Button,StyleSheet,Image} from 'react-native';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\n\r\n\r\nconst Login = ({ navigation }) =>{\r\n\r\n    const [loginText,setloginText] = ('')\r\n\r\n    const handleClick = ()=>{\r\n        setloginText('hello');\r\n    }\r\n    const loginFunc =()=>{\r\n        let url = 'http://127.0.0.1:8000';\r\n\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type':     'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                lat: 1\r\n            }),\r\n            credentials: 'same-origin',\r\n        }).then((response) => {\r\n            if (response.status === 403) {\r\n                console.log('Authentication error...');\r\n                \r\n               // this.setState({currentMessage: 'Authentication error.'});\r\n            }\r\n            console.log(responseJson);\r\n            handleClick();\r\n            //return response.json()\r\n        }).then((responseJson) => {\r\n            console.log(responseJson);\r\n            handleClick();\r\n\r\n            //return responseJson;\r\n        }).catch((error) => {\r\n            let message = 'Error saving new bookmark.';\r\n            //this.setState({'currentMessage': message + \"\\n\" + error});\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    return(\r\n        <View style={styles.container}>\r\n        <Image\r\n          style={{width: 50, height: 50}}\r\n          source={{uri: 'https://reactnative.dev/img/tiny_logo.png'}}\r\n        />   \r\n             <View style={styles.innercontainer}>\r\n                <Text style={styles.text}>UserName :</Text>\r\n                <TextInput placeholder='Enter UserName' value={loginText} underlineColorAndroid='transparent' style={{borderBottomColor:'black',borderBottomWidth:1,fontSize:20}}/>\r\n            </View>\r\n\r\n            <View style={styles.innercontainer}>\r\n                <Text style={styles.text}>Password :</Text>\r\n                <TextInput placeholder='Enter Password' value={loginText} underlineColorAndroid='transparent' style={{borderBottomColor:'black',borderBottomWidth:1,fontSize:20}}/>\r\n            </View>\r\n\r\n            <Button title=\"Login\" onPress={handleClick} />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n    },\r\n    innercontainer:{\r\n        flexDirection:'row',\r\n        justifyContent:'space-evenly',\r\n        margin:10\r\n    },\r\n\r\n    text:{\r\n        fontSize:20,\r\n        justifyContent:'center',\r\n        alignContent:'center'\r\n    },\r\n});\r\n\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}