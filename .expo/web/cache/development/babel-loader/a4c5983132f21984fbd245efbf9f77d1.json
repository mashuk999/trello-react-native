{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abhay\\\\Desktop\\\\trelloclone\\\\trello\\\\screens\\\\Login.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeScreen from \"../screens/HomeScreen\";\nimport LinksScreen from \"../screens/LinksScreen\";\nvar Stack = createStackNavigator();\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginText = _useState2[0],\n      setloginText = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passwordText = _useState4[0],\n      setPasswordText = _useState4[1];\n\n  var handleLogin = function handleLogin() {};\n\n  var loginFunc = function loginFunc() {\n    var url = 'http://127.0.0.1:8000/auth/login/';\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        loginID: {\n          loginText: loginText\n        }['loginText'],\n        password: {\n          passwordText: passwordText\n        }['passwordText']\n      }),\n      credentials: 'same-origin'\n    }).then(function (response) {\n      if (response.status === 403) {\n        console.log('Authentication error...');\n      }\n\n      return response.json();\n    }).then(function (responseJson) {\n      console.log(responseJson);\n      handleLogin();\n      return responseJson;\n    }).catch(function (error) {\n      var message = 'Error saving new bookmark.';\n      console.log(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 50,\n      height: 50\n    },\n    source: {\n      uri: 'https://reactnative.dev/img/tiny_logo.png'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    }\n  }), React.createElement(View, {\n    style: styles.innercontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    }\n  }, \"UserName :\"), React.createElement(TextInput, {\n    placeholder: \"Enter UserName\",\n    underlineColorAndroid: \"transparent\",\n    style: {\n      borderBottomColor: 'black',\n      borderBottomWidth: 1,\n      fontSize: 20\n    },\n    onChangeText: function onChangeText(value) {\n      setloginText(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    }\n  })), React.createElement(View, {\n    style: styles.innercontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    }\n  }, \"Password :\"), React.createElement(TextInput, {\n    placeholder: \"Enter Password\",\n    underlineColorAndroid: \"transparent\",\n    style: {\n      borderBottomColor: 'black',\n      borderBottomWidth: 1,\n      fontSize: 20\n    },\n    onChangeText: function onChangeText(value) {\n      setPasswordText(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    }\n  })), React.createElement(Button, {\n    title: \"Login\",\n    onPress: loginFunc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  innercontainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    margin: 10\n  },\n  text: {\n    fontSize: 20,\n    justifyContent: 'center',\n    alignContent: 'center'\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/Abhay/Desktop/trelloclone/trello/screens/Login.js"],"names":["React","useState","TextInput","NavigationContainer","createStackNavigator","HomeScreen","LinksScreen","Stack","Login","navigation","loginText","setloginText","passwordText","setPasswordText","handleLogin","loginFunc","url","fetch","method","headers","Accept","body","JSON","stringify","loginID","password","credentials","then","response","status","console","log","json","responseJson","catch","error","message","styles","container","width","height","uri","innercontainer","text","borderBottomColor","borderBottomWidth","fontSize","value","StyleSheet","create","justifyContent","alignItems","flexDirection","margin","alignContent"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport {Text, View, Button,StyleSheet,Image} from 'react-native';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\n\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createStackNavigator} from '@react-navigation/stack';\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport LinksScreen from '../screens/LinksScreen';\r\n\r\n\r\nconst Stack = createStackNavigator();\r\nconst Login = ({ navigation }) =>{\r\n\r\n    const [loginText,setloginText] = useState()\r\n    const [passwordText,setPasswordText] = useState('')\r\n\r\n    const handleLogin = ()=>{\r\n        //setloginText('hello');\r\n        //navigation.navigate('Links');\r\n    }\r\n\r\n\r\n\r\n    const loginFunc =()=>{\r\n        //console.log('hello');\r\n\r\n        let url = 'http://127.0.0.1:8000/auth/login/';\r\n\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type':     'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                loginID: {loginText}['loginText'],\r\n                password:{passwordText}['passwordText']\r\n            }),\r\n            credentials: 'same-origin',\r\n        }).then((response) => {\r\n            if (response.status === 403) {\r\n                console.log('Authentication error...');\r\n                \r\n               // this.setState({currentMessage: 'Authentication error.'});\r\n            }\r\n            //console.log(response);\r\n            //handleClick();\r\n            return response.json()\r\n        }).then((responseJson) => {\r\n            //let jobj = JSON.parse(responseJson);\r\n            console.log(responseJson);\r\n            handleLogin();\r\n            return responseJson;\r\n        }).catch((error) => {\r\n            let message = 'Error saving new bookmark.';\r\n            //this.setState({'currentMessage': message + \"\\n\" + error});\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    return(\r\n       // handleClick()\r\n        <View style={styles.container}>\r\n        <Image\r\n          style={{width: 50, height: 50}}\r\n          source={{uri: 'https://reactnative.dev/img/tiny_logo.png'}}\r\n        />   \r\n             <View style={styles.innercontainer}>\r\n                <Text style={styles.text}>UserName :</Text>\r\n                <TextInput placeholder='Enter UserName'\r\n                underlineColorAndroid='transparent'\r\n                style={{borderBottomColor:'black',borderBottomWidth:1,fontSize:20}}\r\n                onChangeText={(value)=>{setloginText(value)}}/>\r\n            </View>\r\n\r\n            <View style={styles.innercontainer}>\r\n                <Text style={styles.text}>Password :</Text>\r\n                <TextInput placeholder='Enter Password' \r\n                underlineColorAndroid='transparent' \r\n                style={{borderBottomColor:'black',borderBottomWidth:1,fontSize:20}}\r\n                onChangeText={(value)=>{setPasswordText(value)}}/>\r\n            </View>\r\n\r\n            <Button title=\"Login\" onPress={loginFunc} />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n    },\r\n    innercontainer:{\r\n        flexDirection:'row',\r\n        justifyContent:'space-evenly',\r\n        margin:10\r\n    },\r\n\r\n    text:{\r\n        fontSize:20,\r\n        justifyContent:'center',\r\n        alignContent:'center'\r\n    },\r\n});\r\n\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}